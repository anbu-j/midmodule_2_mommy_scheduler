[{"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/index.js":"1","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/App.js":"2","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/reportWebVitals.js":"3","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyScheduler.jsx":"4","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyChallenges.jsx":"5","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyActivities.jsx":"6","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyReview.jsx":"7","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/data/challengedata.js":"8","/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/data/activitiesdata.js":"9","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/index.js":"10","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/App.js":"11","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/reportWebVitals.js":"12","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyChallenges.jsx":"13","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyScheduler.jsx":"14","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyReview.jsx":"15","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyActivities.jsx":"16","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/data/activitiesdata.js":"17","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/data/challengedata.js":"18","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/index.js":"19","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/App.js":"20","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/reportWebVitals.js":"21","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/data/activitiesdata.js":"22","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/data/challengedata.js":"23","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx":"24","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MChallenge.jsx":"25","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MActivities.jsx":"26","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx":"27","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/NavDisp.jsx":"28","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MSchedule.jsx":"29"},{"size":500,"mtime":1620543482803,"results":"30","hashOfConfig":"31"},{"size":1145,"mtime":1620700372105,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1620543482807,"results":"33","hashOfConfig":"31"},{"size":6649,"mtime":1620700414333,"results":"34","hashOfConfig":"31"},{"size":3914,"mtime":1620730469151,"results":"35","hashOfConfig":"31"},{"size":2884,"mtime":1620685941483,"results":"36","hashOfConfig":"31"},{"size":177,"mtime":1620620561972,"results":"37","hashOfConfig":"31"},{"size":652,"mtime":1620703322686,"results":"38","hashOfConfig":"31"},{"size":1984,"mtime":1620685686487,"results":"39","hashOfConfig":"31"},{"size":500,"mtime":1620543482803,"results":"40","hashOfConfig":"41"},{"size":1145,"mtime":1620794361770,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1620543482807,"results":"43","hashOfConfig":"41"},{"size":5127,"mtime":1620898978983,"results":"44","hashOfConfig":"41"},{"size":6772,"mtime":1620897048863,"results":"45","hashOfConfig":"41"},{"size":241,"mtime":1620794540374,"results":"46","hashOfConfig":"41"},{"size":7941,"mtime":1620792485853,"results":"47","hashOfConfig":"41"},{"size":1983,"mtime":1620791623743,"results":"48","hashOfConfig":"41"},{"size":652,"mtime":1620703322686,"results":"49","hashOfConfig":"41"},{"size":500,"mtime":1620543482803,"results":"50","hashOfConfig":"51"},{"size":610,"mtime":1621405207124,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1620543482807,"results":"53","hashOfConfig":"51"},{"size":1983,"mtime":1621502655092,"results":"54","hashOfConfig":"51"},{"size":955,"mtime":1621513164591,"results":"55","hashOfConfig":"51"},{"size":13999,"mtime":1621522396316,"results":"56","hashOfConfig":"51"},{"size":4285,"mtime":1621438448735,"results":"57","hashOfConfig":"51"},{"size":5652,"mtime":1621452940270,"results":"58","hashOfConfig":"51"},{"size":6847,"mtime":1621503938835,"results":"59","hashOfConfig":"51"},{"size":1668,"mtime":1621505926007,"results":"60","hashOfConfig":"51"},{"size":4785,"mtime":1621513105442,"results":"61","hashOfConfig":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1r941ti",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1e5h505",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"h3xy5l",{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"103"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/index.js",[],["128","129"],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/App.js",["130"],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/reportWebVitals.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyScheduler.jsx",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyChallenges.jsx",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyActivities.jsx",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/components/MommyReview.jsx",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/data/challengedata.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_project/mommy_scheduler/src/data/activitiesdata.js",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/index.js",[],["131","132"],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/App.js",["133"],"import logo from './logo.svg';\nimport './App.css';\n//import '../node_modules/react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport MommyScheduler from './components/MommyScheduler';\nimport MommyChallenges from './components/MommyChallenges';\nimport MommyActivities from './components/MommyActivities';\nimport MommyReview from './components/MommyReview';\nimport {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/*<MommyScheduler />*/}\n     <MommyScheduler />          \n                \n                <Router>\n                  <Switch>\n                  <Route exact path='/'component={MommyScheduler} />\n                  <Route path='/MommyChallenges'component={MommyChallenges} />\n                  <Route path='/MommyActivities'component={MommyActivities} />\n                  <Route path='/MommyReview'component={MommyReview} />\n                  <Route path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>\n                  </Switch>\n                \n                </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/reportWebVitals.js",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyChallenges.jsx",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyScheduler.jsx",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyReview.jsx",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyActivities.jsx",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/data/activitiesdata.js",[],"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/data/challengedata.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/index.js",[],["134","135"],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/App.js",["136","137"],"//import logo from './logo.svg';\nimport './App.css';\n//import '../node_modules/react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport MScheduler from './components/MScheduler';\nimport MChallenge from './components/MChallenge';\n//import MActivities from './components/MActivities';\nimport MReview from './components/MReview';\n\n//import {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\n  \n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/*<MommyScheduler />*/}\n     <MScheduler />          \n                \n                \n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/reportWebVitals.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/data/activitiesdata.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/data/challengedata.js",[],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx",["138","139","140","141"],"import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport MSchedule from './MSchedule'\nimport NavDisp from './NavDisp';\n//import { BrowserRouter as Router } from 'react-router-dom';\nimport {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\nlocalStorage.setItem(\"currArray1\",JSON.stringify(challenges))\nlocalStorage.setItem(\"currArray2\",JSON.stringify(activities))\n\n\nclass MScheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChallengeReady:false,\n          isActReady: false,\n          isPriorityReady: false,\n          isSummaryReady: false,\n          isSchedulerReady: true,\n          isActivationReady: false,\n\n          challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false,\n\n           activity:activities,\n           duration:'',\n           \n\n           /*currArray1 : challenges,*/\n           \n           }\n        };\n    \n    //const [currArray1, challengeSelection] = useState(challenge)\n    \n\n    challengeSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    \n    }     \n    challengeUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    }     \n\n    activitySelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }    \n    activityUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }  \n\n    reviewActSelection=(i) => {\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isMandatory = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    }\n\n    reviewChalSelection=(i) => {\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isMandatory = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    }\n\n    activityReview=()=>{\n        let chalMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function(o) {return o.priority}))\n        let actMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function(o) {return o.priority}))\n        let actHours = 0\n        let chalHours = 0\n        let chalArray = JSON.parse(localStorage.getItem(\"currArray1\"))\n        let actArray = JSON.parse(localStorage.getItem(\"currArray2\"))\n        //console.log(actArray)\n        console.log(chalArray)\n        console.log(chalMaxVal)\n        for (let i = 1; i<=actMaxVal; i++) {\n        actArray.map((itemInTheList,j)=>{\n            /*console.log(actArray[j].name)\n            console.log(actArray[j].priority)\n            console.log(i + \"th iteration of \" + actMaxVal + \" maximum val\")\n            console.log (actArray[j].priority===i?\"yes\":\"no\")*/\n             if (actArray[j].priority===i && actHours+Number(actArray[j].duration) < 24) {\n                //console.log(actArray[j].name + \" Priority \" + actArray[j].priority + \" Duration \" + actArray[j].duration)\n                     this.reviewActSelection(j);\n                    actHours = actHours+Number(actArray[j].duration);\n                    console.log(\"Total Hours is \" + actHours + \" for priority \" + i)      \n            }\n        });\n    }\n    //console.log(actHours)\n    for (let k = 1; k<=chalMaxVal; k++) {\n        chalArray.map((itemInTheList,m)=>{\n            /*console.log(chalArray[m].name)\n            console.log(chalArray[m].priority)\n            console.log(k + \"th iteration of \" + chalMaxVal + \" maximum val\")\n            console.log (chalArray[m].priority===k?\"yes\":\"no\")*/\n             if (chalArray[m].priority===k && chalHours+Number(chalArray[m].duration) < 24) {\n                //console.log(chalArray[m].name + \" Priority \" + chalArray[m].priority + \" Duration \" + chalArray[m].duration)\n                     this.reviewChalSelection(m);\n                    chalHours = chalHours+Number(chalArray[m].duration);\n                    console.log(\"Total Hours is \" + chalHours + \" for priority \" + k)      \n            }\n        });\n    }\n    localStorage.setItem(\"actHours\",actHours);\n    localStorage.setItem(\"chalHours\",chalHours);\n    }\n\n    \n\n\n    render() {\n        //render={props => <MChallenge statusSelected={this.challengeSelected}\n        return (\n            <div className=\"Container1\">\n                <h1>Mommy Scheduler</h1>\n                {/*<h1>{console.log(\"Chalenge \" + this.state.challenge)}</h1>\n                <h1>{console.log(\"Activity \" + this.state.activity)}</h1>\n        <h1>{console.log(\"CurrArray2 \" + this.state.currArray2)}</h1>\n                 <h1>{console.log(\"CurrArray1 \" + this.state.currArray1)}</h1>\n                <h1>{console.log(this.state.currArray1)}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray1\")))}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray2\")))}</h1>\n                <h1>{console.log(Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function(o) {return o.priority})))}</h1>\n                <h1>{console.log(Math.max.apply(Math, this.state.activity.map(function(o) {return o.priority})))}</h1>\n                <h1>{this.reviewSelection(1)}</h1>\n                <h1>{this.activityReview()}</h1>*/}\n                <div>\n\n                <Router>\n                <NavDisp />\n                  <Switch>\n                  {/*<Route exact path='/'component={MommyScheduler} />\n                  <Route path='/MommyChallenges'component={MommyChallenges} />\n                  <Route path='/MommyActivities'component={MommyActivities} />\n                  <Route path='/MommyReview'component={MommyReview} /> \n                  <Route exact path='/'component={MScheduler} />*/}\n                  <Route exact path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>\n                  <Route path='/MChallenge' render={() => <MChallenge challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} challengeSelected={this.challengeSelection} challengeUnSelected={this.challengeUnSelection}/>} />\n                  <Route path='/MActivities'render={() => <MActivities activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} activitySelected={this.activitySelection} activityUnSelected={this.activityUnSelection} />} />\n                  <Route path='/MReview' render={() => <MReview challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} ChallengeHours = {JSON.parse(localStorage.getItem(\"chalHours\"))} ActivityHours = {JSON.parse(localStorage.getItem(\"actHours\"))} />} />\n                  <Route path='/MSchedule' render={() => < MSchedule challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} />} />\n                 {/*<Route path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>*/}\n                  </Switch>\n                \n                </Router>\n                </div>\n                <div className=\"InitialSetup\">\n                   \n                    <label className=\"labels\">\n                        <input\n                            name=\"isChallengeReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isChallengeReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify Challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify activities part of the challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isPriorityReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isPriorityReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize activities and time\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isSummaryReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSummaryReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isSchedulerReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSchedulerReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Preview Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActivationReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActivationReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true} \n                            value=\"Activate Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MScheduler;","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MChallenge.jsx",["142"],"import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport {Button} from 'react-bootstrap';\nimport MScheduler from './MScheduler'\n\nclass MChallenge extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n           challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false\n        }\n    }\n    statusSelected=(itemInTheList,i)=>{\n        //this.props.challengeSelected(e.target.value);\n        //console.log(e.target.value)\n        console.log(itemInTheList)\n        console.log(i)\n        this.props.challengeSelected(itemInTheList,i)\n    }\n    statusUnSelected=(itemInTheList,i)=>{\n        //this.props.challengeUnSelected(e.target.value);\n        //console.log(e.target.value)\n        console.log(itemInTheList)\n        console.log(i)\n        this.props.challengeUnSelected(itemInTheList,i)\n    }\n    render() {\n        \n        return (\n            <div>\n                <h1>{console.log(this.props.itemInTheList)}</h1>\n                <div>\n                    <h1> Mommy Challenges </h1> \n                </div>\n                <div className=\"printChallenges\">\n                <div className=\"printNonChallenges\">\n                    <h3> Identify Challenges</h3>\n                    {this.props.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? '':(<label className=\"labels\">\n                    <input\n                        id=\"isChallenge\"\n                        type=\"checkbox\"\n                        onChange={()=>this.statusSelected(itemInTheList,i)}\n                        //checked={this.state.checked ? 'checked': null}\n                       //onChange={this.setState({checked: !this.state.checked})}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeName\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeDefaultPriority\"\n                        placeholder={itemInTheList.priority}\n                        onChange={this.handleChange}\n                        >\n                    </input>\n                    \n                </label>);\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n               </div>\n\n                <div className=\"printSelChallenges\">\n                    <h3> Selected Challenges</h3>\n                    {this.props.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? (<label className=\"labels\">\n                    <input\n                        name=\"isChallenge\"\n                        type=\"checkbox\"\n                        checked={true}\n                        onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.priority}>\n                    </input>\n                </label>):'';\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                </div>\n                </div>\n                <Button \n                variant=\"outline-primary\"\n                //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n                //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n                >Lock Challenges</Button>\n            </div>\n        );\n    }\n}\n\nexport default MChallenge;","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MActivities.jsx",["143"],"import React, { Component } from 'react';\n\nclass MActivities extends Component {\n    constructor(props){\n        super(props)\n    }\n    statusSelected=(itemInTheList,i)=>{\n        //this.props.challengeSelected(e.target.value);\n        //console.log(e.target.value)\n        console.log(itemInTheList)\n        console.log(i)\n        this.props.activitySelected(itemInTheList,i)\n    }\n    statusUnSelected=(itemInTheList,i)=>{\n        //this.props.challengeSelected(e.target.value);\n        //console.log(e.target.value)\n        console.log(itemInTheList)\n        console.log(i)\n        this.props.activityUnSelected(itemInTheList,i)\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                <h1> Identify Activities and Prioritize </h1> \n            </div>\n            <div>\n                \n            </div>\n            <div className=\"printActivities\">\n            <div className=\"printNonActivities\">\n            <label className=\"labels\">\n                    <p> </p>\n                    <p>Acitvity</p>\n                    <p>Duration</p>\n                    <p>Daily/Weekly</p>\n                    <p>Mandatory</p>\n        </label>\n                    {this.props.activity.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? '': (<label className=\"labels\">\n                    <input\n                        name=\"isAct\"\n                        type=\"checkbox\"\n                        onChange={()=>this.statusSelected(itemInTheList,i)}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.duration}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isDailyTask}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isMandatory}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.priority}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isSelected }>\n                    </input>\n                </label>)\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                </div>\n                <div className=\"printSelActivities\">\n            {/*<label className=\"labels\">\n                    <p> </p>\n                    <p>Acitvity</p>\n                    <p>Duration</p>\n                    <p>Daily/Weekly</p>\n                    <p>Mandatory</p>\n        </label>*/}\n                    {this.props.activity.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? (<label className=\"labels\">\n                    <input\n                        name=\"isAct\"\n                        type=\"checkbox\"\n                        checked={true}\n                        onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.duration}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isDailyTask}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isMandatory}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.priority}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.isSelected }>\n                    </input>\n                </label>):'';\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MActivities;","/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx",["144"],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/NavDisp.jsx",["145"],"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MSchedule.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":12},{"ruleId":"146","replacedBy":"154"},{"ruleId":"148","replacedBy":"155"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":12},{"ruleId":"146","replacedBy":"156"},{"ruleId":"148","replacedBy":"157"},{"ruleId":"150","severity":1,"message":"158","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"159","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":146,"column":22,"nodeType":"162","messageId":"163","endLine":157,"endColumn":10},{"ruleId":"164","severity":1,"message":"165","line":146,"column":39,"nodeType":"162","messageId":"166","endLine":146,"endColumn":41},{"ruleId":"160","severity":1,"message":"167","line":161,"column":23,"nodeType":"162","messageId":"163","endLine":172,"endColumn":10},{"ruleId":"164","severity":1,"message":"165","line":161,"column":40,"nodeType":"162","messageId":"166","endLine":161,"endColumn":42},{"ruleId":"150","severity":1,"message":"168","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":4,"column":5,"nodeType":"171","messageId":"172","endLine":6,"endColumn":6},{"ruleId":"150","severity":1,"message":"168","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"173","line":3,"column":9,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["174"],["175"],["174"],["175"],"'MChallenge' is defined but never used.","'MReview' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'actHours', 'actHours', 'actHours', 'actHours'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Function declared in a loop contains unsafe references to variable(s) 'chalHours', 'chalHours', 'chalHours', 'chalHours'.","'MScheduler' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]