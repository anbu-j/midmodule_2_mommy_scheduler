{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx\";\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport NavDisp from './NavDisp'; //import { BrowserRouter as Router } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlocalStorage.setItem(\"currArray1\", JSON.stringify(challenges));\n\nclass MScheduler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.challengeSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isSelected = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray1\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(this.state.currArray));\n    };\n\n    this.challengeUnSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray1[i];\n      newVal.isSelected = false;\n      currArray1[i] = newVal;\n      this.setState({\n        currArray1\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(this.state.currArray1));\n    };\n\n    this.activitySelection = (itemInTheList, i) => {\n      let currArray2 = this.state.activity;\n      let newVal = currArray2[i];\n      newVal.isSelected = true;\n      currArray2[i] = newVal;\n      this.setState({\n        currArray2\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity); //localStorage.setItem(\"currArray2\", JSON.stringify(currArray2))\n    };\n\n    this.activityUnSelection = (itemInTheList, i) => {\n      let currArray2 = this.state.activity;\n      let newVal = currArray2[i];\n      newVal.isSelected = false;\n      currArray2[i] = newVal;\n      this.setState({\n        currArray2\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity); //localStorage.setItem(\"currArray2\", JSON.stringify(currArray2))\n    };\n\n    this.state = {\n      isChallengeReady: true,\n      isActReady: false,\n      isPriorityReady: true,\n      isSummaryReady: false,\n      isSchedulerReady: true,\n      isActivationReady: false,\n      challenge: challenges,\n      name: \"\",\n      priority: '',\n      isSelected: false,\n      activity: activities,\n      duration: '',\n      currArray1: challenges\n    };\n  }\n\n  render() {\n    //render={props => <MChallenge statusSelected={this.challengeSelected}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mommy Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: console.log(JSON.parse(localStorage.getItem(\"currArray1\")))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NavDisp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MChallenge\",\n              render: () => /*#__PURE__*/_jsxDEV(MChallenge, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                challengeSelected: this.challengeSelection,\n                challengeUnSelected: this.challengeUnSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InitialSetup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isChallengeReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isChallengeReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify activities part of the challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isPriorityReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isPriorityReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize activities and time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSummaryReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSummaryReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSchedulerReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSchedulerReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Preview Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActivationReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActivationReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Activate Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MScheduler;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx"],"names":["React","Component","challenges","activities","MChallenge","MActivities","MReview","NavDisp","BrowserRouter","Router","Route","Switch","localStorage","setItem","JSON","stringify","MScheduler","constructor","props","challengeSelection","itemInTheList","i","currArray","state","challenge","newVal","isSelected","setState","currArray1","console","log","challengeUnSelection","activitySelection","currArray2","activity","activityUnSelection","isChallengeReady","isActReady","isPriorityReady","isSummaryReady","isSchedulerReady","isActivationReady","name","priority","duration","render","parse","getItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,SAAQC,aAAa,IAAKC,MAA1B,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;;AAEAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeb,UAAf,CAAlC;;AAEA,MAAMc,UAAN,SAAyBf,SAAzB,CAAmC;AAC/BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,kBA3BmB,GA2BE,CAACC,aAAD,EAAeC,CAAf,KAAoB;AACrC,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,SAA3B;AACA,UAAIC,MAAM,GAAGH,SAAS,CAACD,CAAD,CAAtB;AACAI,MAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACAJ,MAAAA,SAAS,CAACD,CAAD,CAAT,GAAcI,MAAd;AACA,WAAKE,QAAL,CACI;AACIC,QAAAA;AADJ,OADJ,EALqC,CAUrC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,SAAvB;AACAZ,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe,KAAKQ,KAAL,CAAWD,SAA1B,CAAnC;AAEH,KAzCkB;;AAAA,SA0CnBS,oBA1CmB,GA0CI,CAACX,aAAD,EAAeC,CAAf,KAAoB;AACvC,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,SAA3B;AACA,UAAIC,MAAM,GAAGG,UAAU,CAACP,CAAD,CAAvB;AACAI,MAAAA,MAAM,CAACC,UAAP,GAAoB,KAApB;AACAE,MAAAA,UAAU,CAACP,CAAD,CAAV,GAAeI,MAAf;AACA,WAAKE,QAAL,CACI;AACIC,QAAAA;AADJ,OADJ,EALuC,CAUvC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,SAAvB;AACAZ,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe,KAAKQ,KAAL,CAAWK,UAA1B,CAAnC;AACH,KAvDkB;;AAAA,SAyDnBI,iBAzDmB,GAyDC,CAACZ,aAAD,EAAeC,CAAf,KAAoB;AACpC,UAAIY,UAAU,GAAG,KAAKV,KAAL,CAAWW,QAA5B;AACA,UAAIT,MAAM,GAAGQ,UAAU,CAACZ,CAAD,CAAvB;AACAI,MAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACAO,MAAAA,UAAU,CAACZ,CAAD,CAAV,GAAeI,MAAf;AACA,WAAKE,QAAL,CACI;AACIM,QAAAA;AADJ,OADJ,EALoC,CAUpC;;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWW,QAAvB,EAXoC,CAYpC;AAEH,KAvEkB;;AAAA,SAwEnBC,mBAxEmB,GAwEG,CAACf,aAAD,EAAeC,CAAf,KAAoB;AACtC,UAAIY,UAAU,GAAG,KAAKV,KAAL,CAAWW,QAA5B;AACA,UAAIT,MAAM,GAAGQ,UAAU,CAACZ,CAAD,CAAvB;AACAI,MAAAA,MAAM,CAACC,UAAP,GAAoB,KAApB;AACAO,MAAAA,UAAU,CAACZ,CAAD,CAAV,GAAeI,MAAf;AACA,WAAKE,QAAL,CACI;AACIM,QAAAA;AADJ,OADJ,EALsC,CAUtC;;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWW,QAAvB,EAXsC,CAYtC;AAEH,KAtFkB;;AAEf,SAAKX,KAAL,GAAa;AACXa,MAAAA,gBAAgB,EAAE,IADP;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,eAAe,EAAE,IAHN;AAIXC,MAAAA,cAAc,EAAE,KAJL;AAKXC,MAAAA,gBAAgB,EAAE,IALP;AAMXC,MAAAA,iBAAiB,EAAE,KANR;AAQXjB,MAAAA,SAAS,EAACtB,UARC;AASVwC,MAAAA,IAAI,EAAC,EATK;AAUVC,MAAAA,QAAQ,EAAC,EAVC;AAWVjB,MAAAA,UAAU,EAAC,KAXD;AAaVQ,MAAAA,QAAQ,EAAC/B,UAbC;AAcVyC,MAAAA,QAAQ,EAAC,EAdC;AAiBVhB,MAAAA,UAAU,EAAG1B;AAjBH,KAAb;AAoBC;;AAiEL2C,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBAAKhB,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACgC,KAAL,CAAWlC,YAAY,CAACmC,OAAb,CAAqB,YAArB,CAAX,CAAZ;AAAL;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,+BAEA,QAAC,MAAD;AAAA,kCACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE,QAAC,MAAD;AAAA,mCAOA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,aAAZ;AAA0B,cAAA,MAAM,EAAE,mBAAM,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAGjC,IAAI,CAACgC,KAAL,CAAWlC,YAAY,CAACmC,OAAb,CAAqB,YAArB,CAAX,CAAxB;AAAwE,gBAAA,iBAAiB,EAAE,KAAK5B,kBAAhG;AAAoH,gBAAA,mBAAmB,EAAE,KAAKY;AAA9I;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cARJ,eA2BI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCAEI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,kBADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKR,KAAL,CAAWa;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAsBI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,YADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKb,KAAL,CAAWc;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eA4CI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,iBADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5CJ,eAiEI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,gBADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKf,KAAL,CAAWgB;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjEJ,eAsFI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,kBADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiB;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtFJ,eA2GI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,mBADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWkB;AAJxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,QAAQ,EAAE,IAHd;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBARJ,eAcI;AACI,YAAA,SAAS,EAAC,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3GJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8JH;;AAxP8B;;AA2PnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport NavDisp from './NavDisp';\n//import { BrowserRouter as Router } from 'react-router-dom';\nimport {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\nlocalStorage.setItem(\"currArray1\",JSON.stringify(challenges))\n\nclass MScheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChallengeReady: true,\n          isActReady: false,\n          isPriorityReady: true,\n          isSummaryReady: false,\n          isSchedulerReady: true,\n          isActivationReady: false,\n\n          challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false,\n\n           activity:activities,\n           duration:'',\n           \n\n           currArray1 : challenges,\n           \n           }\n        };\n    \n    //const [currArray1, challengeSelection] = useState(challenge)\n    \n\n    challengeSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray1\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(this.state.currArray))\n    \n    }     \n    challengeUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray1[i]\n        newVal.isSelected = false\n        currArray1[i] =newVal\n        this.setState(\n            {\n                currArray1\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(this.state.currArray1))\n    }     \n\n    activitySelection = (itemInTheList,i) =>{\n        let currArray2 = this.state.activity\n        let newVal = currArray2[i]\n        newVal.isSelected = true\n        currArray2[i] =newVal\n        this.setState(\n            {\n                currArray2\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        //localStorage.setItem(\"currArray2\", JSON.stringify(currArray2))\n    \n    }    \n    activityUnSelection = (itemInTheList,i) =>{\n        let currArray2 = this.state.activity\n        let newVal = currArray2[i]\n        newVal.isSelected = false\n        currArray2[i] =newVal\n        this.setState(\n            {\n                currArray2\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        //localStorage.setItem(\"currArray2\", JSON.stringify(currArray2))\n    \n    }  \n    render() {\n        //render={props => <MChallenge statusSelected={this.challengeSelected}\n        return (\n            <div className=\"Container1\">\n                <h1>Mommy Scheduler</h1>\n                {/*<h1>{console.log(\"Chalenge \" + this.state.challenge)}</h1>\n                <h1>{console.log(\"Activity \" + this.state.activity)}</h1>\n        <h1>{console.log(\"CurrArray2 \" + this.state.currArray2)}</h1>\n                 <h1>{console.log(\"CurrArray1 \" + this.state.currArray1)}</h1>\n                <h1>{console.log(this.state.currArray1)}</h1>*/}\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray1\")))}</h1>\n                <div>\n\n                <Router>\n                <NavDisp />\n                  <Switch>\n                  {/*<Route exact path='/'component={MommyScheduler} />\n                  <Route path='/MommyChallenges'component={MommyChallenges} />\n                  <Route path='/MommyActivities'component={MommyActivities} />\n                  <Route path='/MommyReview'component={MommyReview} /> \n                  <Route exact path='/'component={MScheduler} />*/}\n                 \n                  <Route path='/MChallenge' render={() => <MChallenge challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} challengeSelected={this.challengeSelection} challengeUnSelected={this.challengeUnSelection}/>} />\n                  {/*<Route path='/MActivities'render={() => <MActivities activity ={JSON.parse (localStorage.getItem(\"currArray2\"))} activitySelected={this.activitySelection} activityUnSelected={this.activityUnSelection} />} />\n                  <Route path='/MReview'component={MReview} />\n                 <Route path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>*/}\n                  </Switch>\n                \n                </Router>\n                </div>\n                <div className=\"InitialSetup\">\n                   \n                    <label className=\"labels\">\n                        <input\n                            name=\"isChallengeReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isChallengeReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify Challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify activities part of the challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isPriorityReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isPriorityReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize activities and time\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isSummaryReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSummaryReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isSchedulerReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSchedulerReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Preview Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActivationReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActivationReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true} \n                            value=\"Activate Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MScheduler;"]},"metadata":{},"sourceType":"module"}