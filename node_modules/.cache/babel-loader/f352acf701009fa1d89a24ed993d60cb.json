{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyChallenges.jsx\";\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MommyChallenges extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = eventToBeChanged => {\n      eventToBeChanged.preventDefault();\n      this.setState({\n        [eventToBeChanged.target.id]: eventToBeChanged.target.value\n      });\n    };\n\n    this.statusUnSelected = () => {\n      this.setState({\n        [this.state.isSelected.value]: false\n      });\n    };\n\n    this.state = {\n      challenge: challenges,\n      name: \"\",\n      priority: '',\n      isSelected: false\n    };\n  }\n\n  statusSelected(event) {\n    let currArray = this.state.challenge;\n    console.log(currArray); //const d= event.target\n\n    console.log(\"inside status Selected\"); //console.log(d)\n\n    /* this.setState(\n         {\n             [this.state.isSelected.value]:true\n         }\n     )*/\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Mommy Challenges \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printChallenges\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printNonChallenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Identify Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), this.state.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected ? '' : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"isChallenge\",\n                type: \"checkbox\",\n                onChange: this.statusSelected() //checked={this.state.checked ? 'checked': null}\n                //onChange={this.setState({checked: !this.state.checked})}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeName\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeDefaultPriority\",\n                placeholder: itemInTheList.priority,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 58\n            }, this); //itemInTheList.name, itemInTheList. ;\n          }), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            children: \"Select Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printSelChallenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Selected Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), this.state.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                onChange: this.statusUnSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 55\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          }), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            children: \" Restore Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MommyChallenges;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/project_mommy_scheduler/src/components/MommyChallenges.jsx"],"names":["React","Component","challenges","Button","MommyChallenges","constructor","props","handleChange","eventToBeChanged","preventDefault","setState","target","id","value","statusUnSelected","state","isSelected","challenge","name","priority","statusSelected","event","currArray","console","log","render","map","itemInTheList","i"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport {Button} from 'react-bootstrap'\n\nclass MommyChallenges extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n           challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false\n        }\n    }\n\n    handleChange=(eventToBeChanged)=>{\n        eventToBeChanged.preventDefault();\n        this.setState(\n            {\n                [eventToBeChanged.target.id]: eventToBeChanged.target.value\n            }\n        )\n    }\n    statusUnSelected=()=>{\n            this.setState(\n                {\n                    [this.state.isSelected.value]:false\n                }\n            )\n        }    \n    statusSelected(event) {\n        let currArray = this.state.challenge\n        console.log(currArray)\n        //const d= event.target\n        console.log(\"inside status Selected\")\n        //console.log(d)\n           /* this.setState(\n                {\n                    [this.state.isSelected.value]:true\n                }\n            )*/\n        }     \n        \n    \n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Mommy Challenges </h1> \n                </div>\n                <div className=\"printChallenges\">\n                <div className=\"printNonChallenges\">\n                    <h3> Identify Challenges</h3>\n                    {this.state.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? '':(<label className=\"labels\">\n                    <input\n                        id=\"isChallenge\"\n                        type=\"checkbox\"\n                        onChange={this.statusSelected()}\n                        //checked={this.state.checked ? 'checked': null}\n                       //onChange={this.setState({checked: !this.state.checked})}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeName\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeDefaultPriority\"\n                        placeholder={itemInTheList.priority}\n                        onChange={this.handleChange}\n                        >\n                    </input>\n                    \n                </label>);\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                <Button variant=\"outline-primary\">Select Challenge</Button>\n                </div>\n\n                <div className=\"printSelChallenges\">\n                    <h3> Selected Challenges</h3>\n                    {this.state.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? (<label className=\"labels\">\n                    <input\n                        name=\"isChallenge\"\n                        type=\"checkbox\"\n                        onChange={this.statusUnSelected}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.priority}>\n                    </input>\n                </label>):'';\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                <Button variant=\"outline-primary\"> Restore Challenge</Button>\n                </div>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default MommyChallenges;"]},"metadata":{},"sourceType":"module"}