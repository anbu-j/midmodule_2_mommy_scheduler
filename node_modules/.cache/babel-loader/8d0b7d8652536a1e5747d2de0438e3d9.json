{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MChallenge.jsx\";\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport { Button } from 'react-bootstrap';\nimport MScheduler from './MommyScheduler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MChallenge extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challenge: challenges,\n      name: \"\",\n      priority: '',\n      isSelected: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Mommy Challenges \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printChallenges\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printNonChallenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Identify Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), this.props.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected ? '' : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"isChallenge\",\n                type: \"checkbox\",\n                onChange: () => this.statusSelected //checked={this.state.checked ? 'checked': null}\n                //onChange={this.setState({checked: !this.state.checked})}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeName\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeDefaultPriority\",\n                placeholder: itemInTheList.priority,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 58\n            }, this); //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printSelChallenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Selected Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), this.state.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 55\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\" //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n        //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n        ,\n        children: \"Lock Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MChallenge;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MChallenge.jsx"],"names":["React","Component","challenges","Button","MScheduler","MChallenge","constructor","props","state","challenge","name","priority","isSelected","render","map","itemInTheList","i","statusSelected","handleChange","statusUnSelected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport {Button} from 'react-bootstrap';\nimport MScheduler from './MommyScheduler'\n\nclass MChallenge extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n           challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Mommy Challenges </h1> \n                </div>\n                <div className=\"printChallenges\">\n                <div className=\"printNonChallenges\">\n                    <h3> Identify Challenges</h3>\n                    {this.props.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? '':(<label className=\"labels\">\n                    <input\n                        id=\"isChallenge\"\n                        type=\"checkbox\"\n                        onChange={()=>this.statusSelected}\n                        //checked={this.state.checked ? 'checked': null}\n                       //onChange={this.setState({checked: !this.state.checked})}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeName\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeDefaultPriority\"\n                        placeholder={itemInTheList.priority}\n                        onChange={this.handleChange}\n                        >\n                    </input>\n                    \n                </label>);\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n               </div>\n\n                <div className=\"printSelChallenges\">\n                    <h3> Selected Challenges</h3>\n                    {this.state.challenge.map((itemInTheList,i)=>{\n                    return itemInTheList.isSelected? (<label className=\"labels\">\n                    <input\n                        name=\"isChallenge\"\n                        type=\"checkbox\"\n                        checked={true}\n                        onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                    > \n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.priority}>\n                    </input>\n                </label>):'';\n                    \n                    //itemInTheList.name, itemInTheList. ;\n                    \n                    }\n                    )\n\n                    }\n                </div>\n                </div>\n                <Button \n                variant=\"outline-primary\"\n                //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n                //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n                >Lock Challenges</Button>\n            </div>\n        );\n    }\n}\n\nexport default MChallenge;"]},"metadata":{},"sourceType":"module"}