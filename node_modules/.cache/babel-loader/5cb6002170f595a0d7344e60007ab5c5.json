{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx\";\nimport React, { Component } from 'react';\nimport MScheduler from './MScheduler';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MReview extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Review selected Challenges and Activities! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printReview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printUnSelSchedule\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Future Selections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schCheckbox\",\n              type: \"checkbox\",\n              readOnly: true,\n              checked: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Activities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), this.props.activity.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && !itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isAct\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: \"Daily Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 93\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          }), this.props.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && !itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeDefaultDuration\",\n                placeholder: itemInTheList.duration,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 93\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printSelSchedule\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Selected Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schCheckbox\",\n              type: \"checkbox\",\n              readOnly: true,\n              checked: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Activities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"schHeaderText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), this.props.activity.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isAct\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: \"Daily Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 92\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          }), this.props.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                id: \"challengeDefaultDuration\",\n                placeholder: itemInTheList.duration,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 92\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\" //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n          //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n          ,\n          children: \"Lock Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MReview;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx"],"names":["React","Component","MScheduler","Button","MReview","render","props","activity","map","itemInTheList","i","isSelected","isMandatory","statusUnSelected","name","duration","priority","challenge","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MScheduler from './MScheduler'\nimport {Button} from 'react-bootstrap';\n\nclass MReview extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Review selected Challenges and Activities! </h1> \n                </div>\n                <div className=\"printReview\">\n                    <div className=\"printUnSelSchedule\">\n                        <h1> Future Selections</h1>\n                        <label className=\"labels\">\n            <input\n                            className=\"schCheckbox\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={false}\n                        >\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Activities\">\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Priority\">\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Duration\">\n                        </input>\n            </label>\n                        {this.props.activity.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (!itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isAct\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.duration}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Daily Activity\">\n                    </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                        {this.props.challenge.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (!itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isChallenge\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeDefaultDuration\"\n                        placeholder={itemInTheList.duration}\n                        onChange={this.handleChange}\n                        >\n                    </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                    <div className=\"printSelSchedule\">\n                    <h1> Selected Schedule</h1>\n                    <label className=\"labels\">\n            <input\n                            className=\"schCheckbox\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={false}\n                        >\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Activities\">\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Priority\">\n                        </input>\n                        <input\n                            className=\"schHeaderText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Duration\">\n                        </input>\n            </label>\n                        {this.props.activity.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isAct\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.duration}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Daily Activity\">\n                    </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                        {this.props.challenge.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isChallenge\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        id=\"challengeDefaultDuration\"\n                        placeholder={itemInTheList.duration}\n                        onChange={this.handleChange}\n                        >\n                    </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                </div>\n                <div>\n                <Button \n                variant=\"outline-primary\"\n                //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n                //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n                >Lock Schedule</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MReview;"]},"metadata":{},"sourceType":"module"}