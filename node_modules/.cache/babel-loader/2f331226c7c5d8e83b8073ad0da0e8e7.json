{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx\";\nimport React, { Component } from 'react';\nimport MScheduler from './MScheduler';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MReview extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Review selected Challenges and Activities! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printReview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printSelChallenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Activities and Challenges waiting to be scheduled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), this.props.activity.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && !itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isAct\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 93\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          }), this.props.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && !itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 93\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"printSelActivities\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Selected Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), this.props.activity.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isAct\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 92\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          }), this.props.challenge.map((itemInTheList, i) => {\n            return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"isChallenge\",\n                type: \"checkbox\",\n                checked: true,\n                onChange: () => this.statusUnSelected(itemInTheList, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"labelText\",\n                type: \"textbox\",\n                readOnly: true,\n                value: itemInTheList.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 92\n            }, this) : ''; //itemInTheList.name, itemInTheList. ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\" //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n          //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n          ,\n          children: \"Lock Challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MReview;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx"],"names":["React","Component","MScheduler","Button","MReview","render","props","activity","map","itemInTheList","i","isSelected","isMandatory","statusUnSelected","name","duration","priority","challenge"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MScheduler from './MScheduler'\nimport {Button} from 'react-bootstrap';\n\nclass MReview extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Review selected Challenges and Activities! </h1> \n                </div>\n                <div className=\"printReview\">\n                    <div className=\"printSelChallenges\">\n                        <h3> Activities and Challenges waiting to be scheduled</h3>\n                        {this.props.activity.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (!itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isAct\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.duration}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                        {this.props.challenge.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (!itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isChallenge\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                    <div className=\"printSelActivities\">\n                    <h3> Selected Schedule</h3>\n                {/*<label className=\"labels\">\n                        <p> </p>\n                        <p>Acitvity</p>\n                        <p>Duration</p>\n                        <p>Daily/Weekly</p>\n                        <p>Mandatory</p>\n            </label>*/}\n                        {this.props.activity.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isAct\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.duration}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                        {this.props.challenge.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                            name=\"isChallenge\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                </div>\n                <div>\n                <Button \n                variant=\"outline-primary\"\n                //onClick={()=>window.history.push(\"/MommyReview\",{from:\"MommyChallenges\"})}\n                //onClick={React.cloneElement(this.props.children, {challenge: this.state.challenge.name})}\n                >Lock Challenges</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MReview;"]},"metadata":{},"sourceType":"module"}