{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx\";\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport MSchedule from './MSchedule';\nimport NavDisp from './NavDisp'; //import { BrowserRouter as Router } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MScheduler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.challengeSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isSelected = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(currArray));\n    };\n\n    this.challengeUnSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isSelected = false;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(currArray));\n    };\n\n    this.activitySelection = (itemInTheList, i) => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isSelected = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.activityUnSelection = (itemInTheList, i) => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isSelected = false;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.reviewActSelection = i => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isMandatory = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.reviewChalSelection = i => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isMandatory = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray1\", JSON.stringify(currArray));\n    };\n\n    this.activityReview = () => {\n      let chalMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function (o) {\n        return o.priority;\n      }));\n      let actMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function (o) {\n        return o.priority;\n      }));\n      let actHours = 0;\n      let chalHours = 0;\n      let chalArray = JSON.parse(localStorage.getItem(\"currArray1\"));\n      let actArray = JSON.parse(localStorage.getItem(\"currArray2\")); //console.log(actArray)\n\n      console.log(chalArray);\n      console.log(chalMaxVal);\n\n      for (let i = 1; i <= actMaxVal; i++) {\n        actArray.map((itemInTheList, j) => {\n          /*console.log(actArray[j].name)\n          console.log(actArray[j].priority)\n          console.log(i + \"th iteration of \" + actMaxVal + \" maximum val\")\n          console.log (actArray[j].priority===i?\"yes\":\"no\")*/\n          if (actArray[j].priority === i && actHours + Number(actArray[j].duration) < 24) {\n            //console.log(actArray[j].name + \" Priority \" + actArray[j].priority + \" Duration \" + actArray[j].duration)\n            this.reviewActSelection(j);\n            actHours = actHours + Number(actArray[j].duration);\n            console.log(\"Total Hours is \" + actHours + \" for priority \" + i);\n          }\n        });\n      } //console.log(actHours)\n\n\n      for (let k = 1; k <= chalMaxVal; k++) {\n        chalArray.map((itemInTheList, m) => {\n          /*console.log(chalArray[m].name)\n          console.log(chalArray[m].priority)\n          console.log(k + \"th iteration of \" + chalMaxVal + \" maximum val\")\n          console.log (chalArray[m].priority===k?\"yes\":\"no\")*/\n          if (chalArray[m].priority === k && chalHours + Number(chalArray[m].duration) < 24) {\n            //console.log(chalArray[m].name + \" Priority \" + chalArray[m].priority + \" Duration \" + chalArray[m].duration)\n            this.reviewChalSelection(m);\n            chalHours = chalHours + Number(chalArray[m].duration);\n            console.log(\"Total Hours is \" + chalHours + \" for priority \" + k);\n          }\n        });\n      }\n\n      localStorage.setItem(\"actHours\", actHours);\n      localStorage.setItem(\"chalHours\", chalHours);\n    };\n\n    this.state = {\n      isChallengeReady: false,\n      isActReady: false,\n      isPriorityReady: false,\n      isSummaryReady: false,\n      isSchedulerReady: false,\n      isActivationReady: false,\n      challenge: challenges,\n      name: \"\",\n      priority: '',\n      isSelected: false,\n      activity: activities,\n      duration: ''\n      /*currArray1 : challenges,*/\n\n    };\n    localStorage.setItem(\"currArray1\", JSON.stringify(challenges));\n    localStorage.setItem(\"currArray2\", JSON.stringify(activities));\n  }\n\n  render() {\n    //render={props => <MChallenge statusSelected={this.challengeSelected}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mommy Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NavDisp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: () => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Please make a selection! \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 61\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MChallenge\",\n              render: () => /*#__PURE__*/_jsxDEV(MChallenge, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                challengeSelected: this.challengeSelection,\n                challengeUnSelected: this.challengeUnSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MActivities\",\n              render: () => /*#__PURE__*/_jsxDEV(MActivities, {\n                activity: JSON.parse(localStorage.getItem(\"currArray2\")),\n                activitySelected: this.activitySelection,\n                activityUnSelected: this.activityUnSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MReview\",\n              render: () => /*#__PURE__*/_jsxDEV(MReview, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                activity: JSON.parse(localStorage.getItem(\"currArray2\")),\n                ChallengeHours: JSON.parse(localStorage.getItem(\"chalHours\")),\n                ActivityHours: JSON.parse(localStorage.getItem(\"actHours\"))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MSchedule\",\n              render: () => /*#__PURE__*/_jsxDEV(MSchedule, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                activity: JSON.parse(localStorage.getItem(\"currArray2\"))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InitialSetup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"headerCheckbox\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"headerText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Scheduler Setup steps and status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isChallengeReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isChallengeReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelSetup\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSummaryReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSummaryReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify activities part of the challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isPriorityReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isPriorityReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize activities and time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSchedulerReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSchedulerReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Preview and Lock Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActivationReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActivationReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Activate Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MScheduler;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx"],"names":["React","Component","challenges","activities","MChallenge","MActivities","MReview","MSchedule","NavDisp","BrowserRouter","Router","Route","Switch","MScheduler","constructor","props","challengeSelection","itemInTheList","i","currArray","state","challenge","newVal","isSelected","setState","console","log","localStorage","setItem","JSON","stringify","challengeUnSelection","activitySelection","activity","activityUnSelection","reviewActSelection","isMandatory","reviewChalSelection","activityReview","chalMaxVal","Math","max","apply","parse","getItem","map","o","priority","actMaxVal","actHours","chalHours","chalArray","actArray","j","Number","duration","k","m","isChallengeReady","isActReady","isPriorityReady","isSummaryReady","isSchedulerReady","isActivationReady","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport MSchedule from './MSchedule'\nimport NavDisp from './NavDisp';\n//import { BrowserRouter as Router } from 'react-router-dom';\nimport {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\n\n\n\nclass MScheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChallengeReady:false,\n          isActReady: false,\n          isPriorityReady: false,\n          isSummaryReady: false,\n          isSchedulerReady: false,\n          isActivationReady: false,\n\n          challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false,\n\n           activity:activities,\n           duration:'',\n           \n\n           /*currArray1 : challenges,*/\n           \n           }\n           localStorage.setItem(\"currArray1\",JSON.stringify(challenges))\n            localStorage.setItem(\"currArray2\",JSON.stringify(activities))\n        };\n    \n    //const [currArray1, challengeSelection] = useState(challenge)\n    \n\n    challengeSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    \n    }     \n    challengeUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    }     \n\n    activitySelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }    \n    activityUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }  \n\n    reviewActSelection=(i) => {\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isMandatory = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    }\n\n    reviewChalSelection=(i) => {\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isMandatory = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    }\n\n    activityReview=()=>{\n        let chalMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function(o) {return o.priority}))\n        let actMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function(o) {return o.priority}))\n        let actHours = 0\n        let chalHours = 0\n        let chalArray = JSON.parse(localStorage.getItem(\"currArray1\"))\n        let actArray = JSON.parse(localStorage.getItem(\"currArray2\"))\n        //console.log(actArray)\n        console.log(chalArray)\n        console.log(chalMaxVal)\n        for (let i = 1; i<=actMaxVal; i++) {\n        actArray.map((itemInTheList,j)=>{\n            /*console.log(actArray[j].name)\n            console.log(actArray[j].priority)\n            console.log(i + \"th iteration of \" + actMaxVal + \" maximum val\")\n            console.log (actArray[j].priority===i?\"yes\":\"no\")*/\n             if (actArray[j].priority===i && actHours+Number(actArray[j].duration) < 24) {\n                //console.log(actArray[j].name + \" Priority \" + actArray[j].priority + \" Duration \" + actArray[j].duration)\n                     this.reviewActSelection(j);\n                    actHours = actHours+Number(actArray[j].duration);\n                    console.log(\"Total Hours is \" + actHours + \" for priority \" + i)      \n            }\n        });\n    }\n    //console.log(actHours)\n    for (let k = 1; k<=chalMaxVal; k++) {\n        chalArray.map((itemInTheList,m)=>{\n            /*console.log(chalArray[m].name)\n            console.log(chalArray[m].priority)\n            console.log(k + \"th iteration of \" + chalMaxVal + \" maximum val\")\n            console.log (chalArray[m].priority===k?\"yes\":\"no\")*/\n             if (chalArray[m].priority===k && chalHours+Number(chalArray[m].duration) < 24) {\n                //console.log(chalArray[m].name + \" Priority \" + chalArray[m].priority + \" Duration \" + chalArray[m].duration)\n                     this.reviewChalSelection(m);\n                    chalHours = chalHours+Number(chalArray[m].duration);\n                    console.log(\"Total Hours is \" + chalHours + \" for priority \" + k)      \n            }\n        });\n    }\n    localStorage.setItem(\"actHours\",actHours);\n    localStorage.setItem(\"chalHours\",chalHours);\n    }\n\n    \n\n\n    render() {\n        //render={props => <MChallenge statusSelected={this.challengeSelected}\n        return (\n            <div className=\"Container1\">\n                <h1>Mommy Scheduler</h1>\n                {/*<h1>{console.log(\"Chalenge \" + this.state.challenge)}</h1>\n                <h1>{console.log(\"Activity \" + this.state.activity)}</h1>\n        <h1>{console.log(\"CurrArray2 \" + this.state.currArray2)}</h1>\n                 <h1>{console.log(\"CurrArray1 \" + this.state.currArray1)}</h1>\n                <h1>{console.log(this.state.currArray1)}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray1\")))}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray2\")))}</h1>\n                <h1>{console.log(Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function(o) {return o.priority})))}</h1>\n                <h1>{console.log(Math.max.apply(Math, this.state.activity.map(function(o) {return o.priority})))}</h1>\n                <h1>{this.reviewSelection(1)}</h1>\n                <h1>{this.activityReview()}</h1>*/}\n                <div>\n\n                <Router>\n                <NavDisp />\n                  <Switch>\n                  {/*<Route exact path='/'component={MommyScheduler} />\n                  <Route path='/MommyChallenges'component={MommyChallenges} />\n                  <Route path='/MommyActivities'component={MommyActivities} />\n                  <Route path='/MommyReview'component={MommyReview} /> \n                  <Route path='/MScheduler'component={MScheduler} />\n                  <Route exact path='/' component={MScheduler}/>*/}\n\n                  <Route exact path='/' render={()=>{return <div><h1>Please make a selection! </h1></div>}}/>\n                  <Route path='/MChallenge' render={() => <MChallenge challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} challengeSelected={this.challengeSelection} challengeUnSelected={this.challengeUnSelection}/>} />\n                  <Route path='/MActivities'render={() => <MActivities activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} activitySelected={this.activitySelection} activityUnSelected={this.activityUnSelection} />} />\n                  <Route path='/MReview' render={() => <MReview challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} ChallengeHours = {JSON.parse(localStorage.getItem(\"chalHours\"))} ActivityHours = {JSON.parse(localStorage.getItem(\"actHours\"))} />} />\n                  <Route path='/MSchedule' render={() => < MSchedule challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} />} /> \n                 \n                 {/*<Route path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>*/}\n\n                 {/*<Link to='/' render={()=>{return <div><h1>Please make a selection! </h1></div>}}/>\n                  <Link to='/MChallenge' render={() => <MChallenge challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} challengeSelected={this.challengeSelection} challengeUnSelected={this.challengeUnSelection}/>} />\n                  <Link to='/MActivities'render={() => <MActivities activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} activitySelected={this.activitySelection} activityUnSelected={this.activityUnSelection} />} />\n                  <Link to='/MReview' render={() => <MReview challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} ChallengeHours = {JSON.parse(localStorage.getItem(\"chalHours\"))} ActivityHours = {JSON.parse(localStorage.getItem(\"actHours\"))} />} />\n                <Link to='/MSchedule' render={() => < MSchedule challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} />} />*/}\n                  </Switch>\n                \n                </Router>\n                </div>\n                <div className=\"InitialSetup\">\n                    <label className=\"header\">\n                        <input\n                            className=\"headerCheckbox\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={false}\n                        >\n                        </input>\n                        <input\n                            className=\"headerText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Scheduler Setup steps and status\">\n                        </input>\n                    </label>\n                   \n                    <label className=\"labels\">\n                        <input\n                            name=\"isChallengeReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isChallengeReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelSetup\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify Challenges\">\n                        </input>\n                    </label>\n                    <label className=\"labels\">\n                        <input\n                            name=\"isSummaryReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSummaryReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize challenges\">\n                        </input>\n                    </label>\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify activities part of the challenges\">\n                        </input>\n                    </label>\n\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isPriorityReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isPriorityReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize activities and time\">\n                        </input>\n                    </label>\n                    \n\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isSchedulerReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSchedulerReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Preview and Lock Scheduler\">\n                        </input>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActivationReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActivationReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true} \n                            value=\"Activate Scheduler\">\n                        </input>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MScheduler;"]},"metadata":{},"sourceType":"module"}