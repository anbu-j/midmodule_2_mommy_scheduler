{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx\";\nimport React, { Component } from 'react';\nimport MScheduler from './MScheduler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MReview extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Review selected Challenges and Activities! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printReview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printSelChallenges\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Selected Challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), this.props.challenge.map((itemInTheList, i) => {\n          return itemInTheList.isSelected ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"isChallenge\",\n              type: \"checkbox\",\n              checked: true,\n              onChange: () => this.statusUnSelected(itemInTheList, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 59\n          }, this) : ''; //itemInTheList.name, itemInTheList. ;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"printSelActivities\",\n        children: this.props.activity.map((itemInTheList, i) => {\n          return itemInTheList.isSelected ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"isAct\",\n              type: \"checkbox\",\n              checked: true,\n              onChange: () => this.statusUnSelected(itemInTheList, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.isDailyTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.isMandatory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.isSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 59\n          }, this) : ''; //itemInTheList.name, itemInTheList. ;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MReview;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MReview.jsx"],"names":["React","Component","MScheduler","MReview","render","props","challenge","map","itemInTheList","i","isSelected","statusUnSelected","name","priority","activity","duration","isDailyTask","isMandatory"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MScheduler from './MScheduler'\n\nclass MReview extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Review selected Challenges and Activities! </h1> \n                </div>\n                <div className=\"printReview\"></div>\n                    <div className=\"printSelChallenges\">\n                        <h3> Selected Challenges</h3>\n                        {this.props.challenge.map((itemInTheList,i)=>{\n                        return itemInTheList.isSelected? (<label className=\"labels\">\n                        <input\n                            name=\"isChallenge\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                    <div className=\"printSelActivities\">\n                {/*<label className=\"labels\">\n                        <p> </p>\n                        <p>Acitvity</p>\n                        <p>Duration</p>\n                        <p>Daily/Weekly</p>\n                        <p>Mandatory</p>\n            </label>*/}\n                        {this.props.activity.map((itemInTheList,i)=>{\n                        return itemInTheList.isSelected? (<label className=\"labels\">\n                        <input\n                            name=\"isAct\"\n                            type=\"checkbox\"\n                            checked={true}\n                            onChange={()=>this.statusUnSelected(itemInTheList,i)}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.name}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.duration}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.isDailyTask}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.isMandatory}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.priority}>\n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value={itemInTheList.isSelected }>\n                        </input>\n                    </label>):'';\n                        \n                        //itemInTheList.name, itemInTheList. ;\n                        \n                        }\n                        )\n\n                        }\n                    </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default MReview;"]},"metadata":{},"sourceType":"module"}