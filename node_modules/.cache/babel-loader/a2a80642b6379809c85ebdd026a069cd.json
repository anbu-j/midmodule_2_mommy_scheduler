{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx\";\nimport React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport NavDisp from './NavDisp'; //import { BrowserRouter as Router } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlocalStorage.setItem(\"currArray1\", JSON.stringify(challenges));\nlocalStorage.setItem(\"currArray2\", JSON.stringify(activities));\n\nclass MScheduler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.challengeSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isSelected = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(currArray));\n    };\n\n    this.challengeUnSelection = (itemInTheList, i) => {\n      let currArray = this.state.challenge;\n      let newVal = currArray[i];\n      newVal.isSelected = false;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.challenge);\n      localStorage.setItem(\"currArray1\", JSON.stringify(currArray));\n    };\n\n    this.activitySelection = (itemInTheList, i) => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isSelected = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.activityUnSelection = (itemInTheList, i) => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isSelected = false;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.reviewSelection = i => {\n      let currArray = this.state.activity;\n      let newVal = currArray[i];\n      newVal.isMandatory = true;\n      currArray[i] = newVal;\n      this.setState({\n        currArray\n      }); //console.log(itemInTheList)\n\n      console.log(this.state.activity);\n      localStorage.setItem(\"currArray2\", JSON.stringify(currArray));\n    };\n\n    this.activityReview = () => {\n      let actMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function (o) {\n        return o.priority;\n      }));\n      let chalMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function (o) {\n        return o.priority;\n      }));\n      let actHours = 0;\n      let chalHours = 0;\n      let actArray = JSON.parse(localStorage.getItem(\"currArray2\"));\n      console.log(currArray);\n\n      for (let i = 1; i <= maxVal; i++) {\n        actArray.map((itemInTheList, j) => {\n          /*console.log(currArray[j].name)\n          console.log(currArray[j].priority)\n          console.log(i + \"st iteration of \" + maxVal + \" maximum val\")\n          console.log (currArray[j].priority===i?\"yes\":\"no\")*/\n          if (actArray[j].priority === i && actHours + Number(actArray[j].duration) < 24) {\n            //console.log(currArray[j].name + \" Priority \" + currArray[j].priority + \" Duration \" + currArray[j].duration)\n            this.reviewSelection(j);\n            actHours = actHours + Number(actArray[j].duration);\n            console.log(\"Total Hours is \" + actHours + \" for priority \" + i);\n          }\n        });\n      } //console.log(actHours)\n\n    };\n\n    this.state = {\n      isChallengeReady: true,\n      isActReady: false,\n      isPriorityReady: true,\n      isSummaryReady: false,\n      isSchedulerReady: true,\n      isActivationReady: false,\n      challenge: challenges,\n      name: \"\",\n      priority: '',\n      isSelected: false,\n      activity: activities,\n      duration: ''\n      /*currArray1 : challenges,*/\n\n    };\n  }\n\n  render() {\n    //render={props => <MChallenge statusSelected={this.challengeSelected}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mommy Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.activityReview()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NavDisp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MChallenge\",\n              render: () => /*#__PURE__*/_jsxDEV(MChallenge, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                challengeSelected: this.challengeSelection,\n                challengeUnSelected: this.challengeUnSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MActivities\",\n              render: () => /*#__PURE__*/_jsxDEV(MActivities, {\n                activity: JSON.parse(localStorage.getItem(\"currArray2\")),\n                activitySelected: this.activitySelection,\n                activityUnSelected: this.activityUnSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/MReview\",\n              render: () => /*#__PURE__*/_jsxDEV(MReview, {\n                challenge: JSON.parse(localStorage.getItem(\"currArray1\")),\n                activity: JSON.parse(localStorage.getItem(\"currArray2\"))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InitialSetup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isChallengeReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isChallengeReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Identify activities part of the challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isPriorityReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isPriorityReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize activities and time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSummaryReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSummaryReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Prioritize challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isSchedulerReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isSchedulerReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Preview Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"isActivationReady\",\n            type: \"checkbox\",\n            readOnly: true,\n            checked: this.state.isActivationReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"labelText\",\n            type: \"textbox\",\n            readOnly: true,\n            value: \"Activate Scheduler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SetupButton\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MScheduler;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MScheduler.jsx"],"names":["React","Component","challenges","activities","MChallenge","MActivities","MReview","NavDisp","BrowserRouter","Router","Route","Switch","localStorage","setItem","JSON","stringify","MScheduler","constructor","props","challengeSelection","itemInTheList","i","currArray","state","challenge","newVal","isSelected","setState","console","log","challengeUnSelection","activitySelection","activity","activityUnSelection","reviewSelection","isMandatory","activityReview","actMaxVal","Math","max","apply","parse","getItem","map","o","priority","chalMaxVal","actHours","chalHours","actArray","maxVal","j","Number","duration","isChallengeReady","isActReady","isPriorityReady","isSummaryReady","isSchedulerReady","isActivationReady","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport challenges from '../data/challengedata';\nimport activities from '../data/activitiesdata';\nimport MChallenge from './MChallenge';\nimport MActivities from './MActivities';\nimport MReview from './MReview';\nimport NavDisp from './NavDisp';\n//import { BrowserRouter as Router } from 'react-router-dom';\nimport {BrowserRouter as  Router,Route, Switch} from 'react-router-dom';\n\nlocalStorage.setItem(\"currArray1\",JSON.stringify(challenges))\nlocalStorage.setItem(\"currArray2\",JSON.stringify(activities))\n\n\nclass MScheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isChallengeReady: true,\n          isActReady: false,\n          isPriorityReady: true,\n          isSummaryReady: false,\n          isSchedulerReady: true,\n          isActivationReady: false,\n\n          challenge:challenges,\n           name:\"\",\n           priority:'',\n           isSelected:false,\n\n           activity:activities,\n           duration:'',\n           \n\n           /*currArray1 : challenges,*/\n           \n           }\n        };\n    \n    //const [currArray1, challengeSelection] = useState(challenge)\n    \n\n    challengeSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    \n    }     \n    challengeUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.challenge\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.challenge)\n        localStorage.setItem(\"currArray1\", JSON.stringify(currArray))\n    }     \n\n    activitySelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }    \n    activityUnSelection = (itemInTheList,i) =>{\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isSelected = false\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    \n    }  \n\n    reviewSelection=(i) => {\n        let currArray = this.state.activity\n        let newVal = currArray[i]\n        newVal.isMandatory = true\n        currArray[i] =newVal\n        this.setState(\n            {\n                currArray\n            }\n        )\n        //console.log(itemInTheList)\n        console.log(this.state.activity)\n        localStorage.setItem(\"currArray2\", JSON.stringify(currArray))\n    }\n\n    activityReview=()=>{\n        let actMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function(o) {return o.priority}))\n        let chalMaxVal = Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray2\")).map(function(o) {return o.priority}))\n        let actHours = 0\n        let chalHours = 0\n        let actArray = JSON.parse(localStorage.getItem(\"currArray2\"))\n        console.log(currArray)\n        for (let i = 1; i<=maxVal; i++) {\n        actArray.map((itemInTheList,j)=>{\n            /*console.log(currArray[j].name)\n            console.log(currArray[j].priority)\n            console.log(i + \"st iteration of \" + maxVal + \" maximum val\")\n            console.log (currArray[j].priority===i?\"yes\":\"no\")*/\n             if (actArray[j].priority===i && actHours+Number(actArray[j].duration) < 24) {\n                //console.log(currArray[j].name + \" Priority \" + currArray[j].priority + \" Duration \" + currArray[j].duration)\n                     this.reviewSelection(j);\n                    actHours = actHours+Number(actArray[j].duration);\n                    console.log(\"Total Hours is \" + actHours + \" for priority \" + i)      \n            }\n        });\n    }\n    //console.log(actHours)\n\n    }\n\n    \n\n\n    render() {\n        //render={props => <MChallenge statusSelected={this.challengeSelected}\n        return (\n            <div className=\"Container1\">\n                <h1>Mommy Scheduler</h1>\n                {/*<h1>{console.log(\"Chalenge \" + this.state.challenge)}</h1>\n                <h1>{console.log(\"Activity \" + this.state.activity)}</h1>\n        <h1>{console.log(\"CurrArray2 \" + this.state.currArray2)}</h1>\n                 <h1>{console.log(\"CurrArray1 \" + this.state.currArray1)}</h1>\n                <h1>{console.log(this.state.currArray1)}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray1\")))}</h1>\n                <h1>{console.log(JSON.parse(localStorage.getItem(\"currArray2\")))}</h1>\n                <h1>{console.log(Math.max.apply(Math, JSON.parse(localStorage.getItem(\"currArray1\")).map(function(o) {return o.priority})))}</h1>\n                <h1>{console.log(Math.max.apply(Math, this.state.activity.map(function(o) {return o.priority})))}</h1>\n                <h1>{this.reviewSelection(1)}</h1>*/}\n                <h1>{this.activityReview()}</h1>\n                <div>\n\n                <Router>\n                <NavDisp />\n                  <Switch>\n                  {/*<Route exact path='/'component={MommyScheduler} />\n                  <Route path='/MommyChallenges'component={MommyChallenges} />\n                  <Route path='/MommyActivities'component={MommyActivities} />\n                  <Route path='/MommyReview'component={MommyReview} /> \n                  <Route exact path='/'component={MScheduler} />*/}\n                 \n                  <Route path='/MChallenge' render={() => <MChallenge challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} challengeSelected={this.challengeSelection} challengeUnSelected={this.challengeUnSelection}/>} />\n                  <Route path='/MActivities'render={() => <MActivities activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} activitySelected={this.activitySelection} activityUnSelected={this.activityUnSelection} />} />\n                  <Route path='/MReview' render={() => <MReview challenge ={JSON.parse(localStorage.getItem(\"currArray1\"))} activity ={JSON.parse(localStorage.getItem(\"currArray2\"))} />} />\n                 {/*<Route path='/' render={()=>{return<div><h1>Please make a selection! </h1></div>}}/>*/}\n                  </Switch>\n                \n                </Router>\n                </div>\n                <div className=\"InitialSetup\">\n                   \n                    <label className=\"labels\">\n                        <input\n                            name=\"isChallengeReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isChallengeReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify Challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Identify activities part of the challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isPriorityReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isPriorityReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize activities and time\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                    \n                    <label className=\"labels\">\n                        <input\n                            name=\"isSummaryReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSummaryReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Prioritize challenges\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isSchedulerReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isSchedulerReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true}\n                            value=\"Preview Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n\n                    <label className=\"labels\">\n                        <input\n                            name=\"isActivationReady\"\n                            type=\"checkbox\"\n                            readOnly={true}\n                            checked={this.state.isActivationReady}\n                        > \n                        </input>\n                        <input\n                            className=\"labelText\"\n                            type=\"textbox\"\n                            readOnly={true} \n                            value=\"Activate Scheduler\">\n                        </input>\n                        <button\n                            className=\"SetupButton\"\n                        >\n                            Start\n                        </button>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MScheduler;"]},"metadata":{},"sourceType":"module"}