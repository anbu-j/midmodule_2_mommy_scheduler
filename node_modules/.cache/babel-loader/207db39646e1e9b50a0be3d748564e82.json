{"ast":null,"code":"var _jsxFileName = \"/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MSchedule.jsx\";\nimport React, { Component } from 'react'; //import Datetime from 'react-datetime';\n//import \"react-datetime/css/react-datetime.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MSchedule extends Component {\n  /*componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n       componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n       tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n   countDownTime(e){\n    let startTime= Date().substr(16,8);\n    console.log(startTime)\n    //console.log(Date.now())\n    //let runTime = e - startTime\n    //console.log(runTime)\n   }*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      isOn: false,\n      start: 0,\n      startTime: 0,\n      endTime: 0,\n      dispStart: '',\n      dispEnd: '',\n      loading: true\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  startTimer() {\n    this.setState({\n      isOn: true,\n      time: this.state.time,\n      start: Date.now() - this.state.time,\n      //startTime: Date.now(),\n      //start: Date.getHours()+\":\"+Date.getMinutes()+\":\"+Date.getSeconds()+ Date.getHours\n      //start: Date.getHours+\":\"+Date.getMinutes+\":\"+Date.getSeconds\n      //start: Date.now()>this.state.time? \n      dispStart: Math.floor((Date.now() - this.state.start) / 1000 / (60 * 60) % 24) - 4 + \":\" + Math.floor((Date.now() - this.state.start) / 1000 / 60 % 60) + \":\" + Math.floor((Date.now() - this.state.start) / 1000 % 60)\n    });\n    this.timer = setInterval(() => this.setState({\n      //time: Date.now() - this.state.start\n      //time: (Date.getHours+\":\"+Date.getMinutes+\":\"+Date.getSeconds - this.state.start)\n      time: Math.floor((Date.now() - this.state.start) / 1000 / (60 * 60) % 24) + \":\" + Math.floor((Date.now() - this.state.start) / 1000 / 60 % 60) + \":\" + Math.floor((Date.now() - this.state.start) / 1000 % 60)\n    }), 1000);\n  }\n\n  stopTimer() {\n    this.setState({\n      isOn: false,\n      endTime: Date.now(),\n      dispEnd: Math.floor(this.state.endTime / 1000 / (60 * 60) % 24) - 4 + \":\" + Math.floor(this.state.endTime / 1000 / 60 % 60) + \":\" + Math.floor(this.state.endTime / 1000 % 60)\n    });\n    clearInterval(this.timer);\n  }\n\n  resetTimer() {\n    this.setState({\n      time: 0,\n      isOn: false,\n      endTime: Date.now() - this.state.time,\n      dispEnd: Math.floor(this.state.endTime / 1000 / (60 * 60) % 24) - 4 + \":\" + Math.floor(this.state.endTime / 1000 / 60 % 60) + \":\" + Math.floor(this.state.endTime / 1000 % 60)\n    });\n  }\n\n  async componentDidMount() {\n    //const url = `https://api.randomuser.me/`;\n    //const url = \"http://www.colourlovers.com/api/color/6B4106\";\n    //const url = `https://pokeapi.co/api/v2/pokemon/pikachu`\n    const url = `https://image-charts.com/chart?cht=p3&chd=t:90,10&chs=700x100`;\n    const response = await fetch(url);\n    const data = await response.dat();\n    console.log(response); //this.setState({color: data.colors[0]})\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Mommy's Schedule \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Date()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Start time \" + this.state.startTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Date.now()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) / (1000 * 60 * 60 * 24))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) / (1000 * 60 * 60) % 24)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) / 1000 / (60 * 60) % 24)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) / 1000 / 60 % 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Math.floor((Date.now() - this.state.start) / 1000 % 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.props.activity.map((itemInTheList, i) => {\n          return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.startTimer,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true //value=\"Start Time\">\n              ,\n              value: this.state.dispStart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: this.state.dispEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: this.state.isOn ? this.state.time : \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.resetTimer,\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.stopTimer,\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Daily Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 92\n          }, this) : '';\n        }), this.props.challenge.map((itemInTheList, i) => {\n          return itemInTheList.isSelected && itemInTheList.isMandatory ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: itemInTheList.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Time Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"labelText\",\n              type: \"textbox\",\n              readOnly: true,\n              value: \"Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 92\n          }, this) : '';\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MSchedule;","map":{"version":3,"sources":["/Users/psadmin/Desktop/Perscholas/midmodule_2_mommy_scheduler/src/components/MSchedule.jsx"],"names":["React","Component","MSchedule","constructor","props","state","time","isOn","start","startTime","endTime","dispStart","dispEnd","loading","startTimer","bind","stopTimer","resetTimer","setState","Date","now","Math","floor","timer","setInterval","clearInterval","componentDidMount","url","response","fetch","data","dat","console","log","render","activity","map","itemInTheList","i","isSelected","isMandatory","name","challenge"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Datetime from 'react-datetime';\n//import \"react-datetime/css/react-datetime.css\";\n\nclass MSchedule extends Component {\n   \n    \n    \n      /*componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n      }\n    \n      componentWillUnmount() {\n        clearInterval(this.timerID);\n      }\n    \n      tick() {\n        this.setState({\n          date: new Date()\n        });\n      }\n\n      countDownTime(e){\n        let startTime= Date().substr(16,8);\n        console.log(startTime)\n        //console.log(Date.now())\n        //let runTime = e - startTime\n        //console.log(runTime)\n \n     }*/\n     constructor(props){\n        super(props)\n        this.state = {\n          time: 0,\n          isOn: false,\n          start: 0,\n          startTime: 0,\n          endTime: 0,\n          dispStart: '',\n          dispEnd: '',\n          loading: true\n        }\n        this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n      }\n      startTimer() {\n        this.setState({\n          isOn: true,\n          time: this.state.time,\n          start: Date.now() - this.state.time,\n          //startTime: Date.now(),\n          //start: Date.getHours()+\":\"+Date.getMinutes()+\":\"+Date.getSeconds()+ Date.getHours\n          //start: Date.getHours+\":\"+Date.getMinutes+\":\"+Date.getSeconds\n          //start: Date.now()>this.state.time? \n          dispStart: ((Math.floor(((Date.now()-this.state.start)/1000/(60*60))%24)-4)+\":\"+(Math.floor(((Date.now()-this.state.start)/1000/60)%60))+\":\"+(Math.floor(((Date.now()-this.state.start)/1000)%60)))\n          \n        })\n        this.timer = setInterval(() => this.setState({\n          //time: Date.now() - this.state.start\n            //time: (Date.getHours+\":\"+Date.getMinutes+\":\"+Date.getSeconds - this.state.start)\n            time: ((Math.floor(((Date.now()-this.state.start)/1000/(60*60))%24))+\":\"+(Math.floor(((Date.now()-this.state.start)/1000/60)%60))+\":\"+(Math.floor(((Date.now()-this.state.start)/1000)%60)))\n        }), 1000);\n\n      }\n      stopTimer() {\n        this.setState(\n          {\n            isOn: false,\n            endTime: Date.now(),\n            dispEnd: ((Math.floor(((this.state.endTime)/1000/(60*60))%24)-4)+\":\"+(Math.floor(((this.state.endTime)/1000/60)%60))+\":\"+(Math.floor(((this.state.endTime)/1000)%60)))\n          })\n\n        clearInterval(this.timer)\n      }\n      resetTimer() {\n        this.setState(\n          {\n            time: 0, \n            isOn: false,\n            endTime: Date.now()-this.state.time,\n            dispEnd: ((Math.floor(((this.state.endTime)/1000/(60*60))%24)-4)+\":\"+(Math.floor(((this.state.endTime)/1000/60)%60))+\":\"+(Math.floor(((this.state.endTime)/1000)%60)))\n          })\n      }\n\n      async componentDidMount() {\n        //const url = `https://api.randomuser.me/`;\n        //const url = \"http://www.colourlovers.com/api/color/6B4106\";\n        //const url = `https://pokeapi.co/api/v2/pokemon/pikachu`\n        const url = `https://image-charts.com/chart?cht=p3&chd=t:90,10&chs=700x100`\n        const response = await fetch(url);\n        const data = await response.dat();\n        console.log(response)\n        //this.setState({color: data.colors[0]})\n    }\n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <h1> Mommy's Schedule </h1> \n                    {/*<h1>{console.log(t)}</h1>\n                    <h3>timer: {this.state.time}</h3>\n                    <h3>{Math.floor((Date.Datetime/1000)%60)}</h3>*/}\n                    <h3>{Date()}</h3>\n                    <h3>{\"Start time \" + this.state.startTime}</h3>\n                    <h3>{Date.now()}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)/(1000*60*60*24)))}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)/(1000*60*60))%24)}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)/1000/(60*60))%24)}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)%(1000*60*60*24))/(1000*60*60))}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)/1000/60)%60)}</h3>\n                    <h3>{Math.floor(((Date.now()-this.state.start)/1000)%60)}</h3>\n                    {/*<h3>{this.getStatus()}</h3>*/}\n                </div>\n                <div>\n                {this.props.activity.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <button onClick={this.startTimer}>Start</button>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        //value=\"Start Time\">\n                        value={this.state.dispStart}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={this.state.dispEnd}>\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={this.state.isOn ? this.state.time:\"Start Time\"}>\n                    </input>\n                    <button onClick={this.resetTimer}>Complete</button>\n                    <button onClick={this.stopTimer}>Stop</button>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Daily Activity\">\n                    </input>\n                    </label>):'';\n                    }\n                    )\n\n                    }\n                    {this.props.challenge.map((itemInTheList,i)=>{\n                        return (itemInTheList.isSelected && (itemInTheList.isMandatory))? (<label className=\"labels\">\n                        <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value={itemInTheList.name}>\n                    </input>\n                    <button >Start</button>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Start Time\">\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"End Time\">\n                    </input>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Time Left\">\n                    </input>\n                    <button >Complete</button>\n                    <button >Stop</button>\n                    <input\n                        className=\"labelText\"\n                        type=\"textbox\"\n                        readOnly={true}\n                        value=\"Challenge\">\n                    </input>\n                    </label>):'';\n                    }\n                    )\n\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MSchedule;"]},"metadata":{},"sourceType":"module"}